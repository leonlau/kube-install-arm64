apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: adminserver-rc
  labels:
    name: adminserver-rc
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      name: adminserver-apps
  template:
    metadata:
      labels:
        name: adminserver-apps
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: arm64
        node-role.kubernetes.io/master: 'true'
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: adminserver-app
        image: kylincloud2.hub/harbor-adminserver:1.2.2
        imagePullPolicy: IfNotPresent
        env:
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: LOG_LEVEL
          - name: JSON_CFG_STORE_PATH
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: JSON_CFG_STORE_PATH
          - name: EXT_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: EXT_ENDPOINT
          - name: AUTH_MODE
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: AUTH_MODE
          - name: SELF_REGISTRATION
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: SELF_REGISTRATION
          - name: DATABASE_TYPE
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: DATABASE_TYPE
          - name: MYSQL_HOST
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: MYSQL_HOST
          - name: MYSQL_PORT
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: MYSQL_PORT
          - name: MYSQL_USR
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: MYSQL_USR
          - name: MYSQL_PWD
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: MYSQL_PWD
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: MYSQL_DATABASE
          - name: REGISTRY_URL
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: REGISTRY_URL
          - name: TOKEN_SERVICE_URL
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: TOKEN_SERVICE_URL
          - name: HARBOR_ADMIN_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: HARBOR_ADMIN_PASSWORD
          - name: PROJECT_CREATION_RESTRICTION
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: PROJECT_CREATION_RESTRICTION
          - name: VERIFY_REMOTE_CERT
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: VERIFY_REMOTE_CERT
          - name: MAX_JOB_WORKERS
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: MAX_JOB_WORKERS
          - name: UI_SECRET
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: UI_SECRET
          - name: JOBSERVICE_SECRET
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: JOBSERVICE_SECRET
          - name: TOKEN_EXPIRATION
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: TOKEN_EXPIRATION
          - name: CFG_EXPIRATION
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: CFG_EXPIRATION
          - name: GODEBUG
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: GODEBUG
          - name: ADMIRAL_URL
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: ADMIRAL_URL
          - name: WITH_NOTARY
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: WITH_NOTARY
          - name: RESET
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: RESET
          - name: CLAIR_DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: CLAIR_DB_PASSWORD
          - name: EMAIL_INSECURE
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: EMAIL_INSECURE
          - name: WITH_CLAIR
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: WITH_CLAIR
          - name: JOBSERVICE_URL
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: JOBSERVICE_URL
          - name: UI_URL
            valueFrom:
              configMapKeyRef:
                name: harbor-adminserver-config
                key: UI_URL
          #Workaround the volume API issue.
          - name: IMAGE_STORE_PATH
            value: "/"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/adminserver/
      volumes:
      - name: config
        configMap:
          name: harbor-adminserver-config
          items:
          - key: SECRET_KEY
            path: key

---
apiVersion: v1
kind: Service
metadata:
  name: adminserver
  namespace: registry
spec:
  ports:
    - port: 80
  selector:
    name: adminserver-apps

